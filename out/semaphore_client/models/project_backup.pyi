from _typeshed import Incomplete
from semaphore_client.configuration import Configuration as Configuration

class ProjectBackup:
    swagger_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(self, meta: Incomplete | None = None, templates: Incomplete | None = None, repositories: Incomplete | None = None, keys: Incomplete | None = None, views: Incomplete | None = None, inventories: Incomplete | None = None, environments: Incomplete | None = None, _configuration: Incomplete | None = None) -> None: ...
    @property
    def meta(self): ...
    @meta.setter
    def meta(self, meta) -> None: ...
    @property
    def templates(self): ...
    @templates.setter
    def templates(self, templates) -> None: ...
    @property
    def repositories(self): ...
    @repositories.setter
    def repositories(self, repositories) -> None: ...
    @property
    def keys(self): ...
    @keys.setter
    def keys(self, keys) -> None: ...
    @property
    def views(self): ...
    @views.setter
    def views(self, views) -> None: ...
    @property
    def inventories(self): ...
    @inventories.setter
    def inventories(self, inventories) -> None: ...
    @property
    def environments(self): ...
    @environments.setter
    def environments(self, environments) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
