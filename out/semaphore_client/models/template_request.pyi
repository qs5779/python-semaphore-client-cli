from _typeshed import Incomplete
from semaphore_client.configuration import Configuration as Configuration

class TemplateRequest:
    swagger_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(self, project_id: Incomplete | None = None, inventory_id: Incomplete | None = None, repository_id: Incomplete | None = None, environment_id: Incomplete | None = None, view_id: Incomplete | None = None, vault_id: Incomplete | None = None, name: Incomplete | None = None, playbook: Incomplete | None = None, arguments: Incomplete | None = None, description: Incomplete | None = None, allow_override_args_in_task: Incomplete | None = None, limit: Incomplete | None = None, suppress_success_alerts: Incomplete | None = None, survey_vars: Incomplete | None = None, _configuration: Incomplete | None = None) -> None: ...
    @property
    def project_id(self): ...
    @project_id.setter
    def project_id(self, project_id) -> None: ...
    @property
    def inventory_id(self): ...
    @inventory_id.setter
    def inventory_id(self, inventory_id) -> None: ...
    @property
    def repository_id(self): ...
    @repository_id.setter
    def repository_id(self, repository_id) -> None: ...
    @property
    def environment_id(self): ...
    @environment_id.setter
    def environment_id(self, environment_id) -> None: ...
    @property
    def view_id(self): ...
    @view_id.setter
    def view_id(self, view_id) -> None: ...
    @property
    def vault_id(self): ...
    @vault_id.setter
    def vault_id(self, vault_id) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def playbook(self): ...
    @playbook.setter
    def playbook(self, playbook) -> None: ...
    @property
    def arguments(self): ...
    @arguments.setter
    def arguments(self, arguments) -> None: ...
    @property
    def description(self): ...
    @description.setter
    def description(self, description) -> None: ...
    @property
    def allow_override_args_in_task(self): ...
    @allow_override_args_in_task.setter
    def allow_override_args_in_task(self, allow_override_args_in_task) -> None: ...
    @property
    def limit(self): ...
    @limit.setter
    def limit(self, limit) -> None: ...
    @property
    def suppress_success_alerts(self): ...
    @suppress_success_alerts.setter
    def suppress_success_alerts(self, suppress_success_alerts) -> None: ...
    @property
    def survey_vars(self): ...
    @survey_vars.setter
    def survey_vars(self, survey_vars) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
