from _typeshed import Incomplete
from semaphore_client.configuration import Configuration as Configuration

class Task:
    swagger_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(self, template_id: Incomplete | None = None, debug: Incomplete | None = None, dry_run: Incomplete | None = None, diff: Incomplete | None = None, playbook: Incomplete | None = None, environment: Incomplete | None = None, limit: Incomplete | None = None, _configuration: Incomplete | None = None) -> None: ...
    @property
    def template_id(self): ...
    @template_id.setter
    def template_id(self, template_id) -> None: ...
    @property
    def debug(self): ...
    @debug.setter
    def debug(self, debug) -> None: ...
    @property
    def dry_run(self): ...
    @dry_run.setter
    def dry_run(self, dry_run) -> None: ...
    @property
    def diff(self): ...
    @diff.setter
    def diff(self, diff) -> None: ...
    @property
    def playbook(self): ...
    @playbook.setter
    def playbook(self, playbook) -> None: ...
    @property
    def environment(self): ...
    @environment.setter
    def environment(self, environment) -> None: ...
    @property
    def limit(self): ...
    @limit.setter
    def limit(self, limit) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
