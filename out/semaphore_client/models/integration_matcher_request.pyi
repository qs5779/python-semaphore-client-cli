from _typeshed import Incomplete
from semaphore_client.configuration import Configuration as Configuration

class IntegrationMatcherRequest:
    swagger_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(self, name: Incomplete | None = None, match_type: Incomplete | None = None, method: Incomplete | None = None, body_data_type: Incomplete | None = None, key: Incomplete | None = None, value: Incomplete | None = None, _configuration: Incomplete | None = None) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def match_type(self): ...
    @match_type.setter
    def match_type(self, match_type) -> None: ...
    @property
    def method(self): ...
    @method.setter
    def method(self, method) -> None: ...
    @property
    def body_data_type(self): ...
    @body_data_type.setter
    def body_data_type(self, body_data_type) -> None: ...
    @property
    def key(self): ...
    @key.setter
    def key(self, key) -> None: ...
    @property
    def value(self): ...
    @value.setter
    def value(self, value) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
